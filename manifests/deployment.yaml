apiVersion: apps/v1
kind: Deployment
metadata:
  name: cats-app
  namespace: cats-prod
  labels:
    app: cats-app
    version: "$TAG"  
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1       
      maxUnavailable: 0  
  selector:
    matchLabels:
      app: cats-app
  template:
    metadata:
      labels:
        app: cats-app
        version: "$TAG"  
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: cats-app
        image: $ACR_NAME.azurecr.io/cats-app:$TAG
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: PORT
          value: "8000"
        - name: WEB_CONCURRENCY
          value: "2"
        - name: MAX_THREADS
          value: "5"
        - name: APP_VERSION
          value: "$TAG"  
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30  
          periodSeconds: 10
          failureThreshold: 3
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          failureThreshold: 30  
          periodSeconds: 10
      terminationGracePeriodSeconds: 30  